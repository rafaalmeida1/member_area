version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: nutri_thata_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nutri_thata_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nutri_thata_api
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - FRONTEND_URL=${FRONTEND_URL}
      - UPLOAD_DIRECTORY=${UPLOAD_DIRECTORY}
      - UPLOAD_MAX_FILE_SIZE=${UPLOAD_MAX_FILE_SIZE}
      - UPLOAD_ALLOWED_TYPES=${UPLOAD_ALLOWED_TYPES}
      - INVITE_EXPIRATION_HOURS=${INVITE_EXPIRATION_HOURS}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_SMTP_AUTH=${MAIL_SMTP_AUTH}
      - MAIL_SMTP_STARTTLS=${MAIL_SMTP_STARTTLS}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DATABASE=${REDIS_DATABASE}
      - REDIS_TIMEOUT=${REDIS_TIMEOUT}
      - REDIS_POOL_MAX_ACTIVE=${REDIS_POOL_MAX_ACTIVE}
      - REDIS_POOL_MAX_IDLE=${REDIS_POOL_MAX_IDLE}
      - REDIS_POOL_MIN_IDLE=${REDIS_POOL_MIN_IDLE}
      - REDIS_POOL_MAX_WAIT=${REDIS_POOL_MAX_WAIT}
      - CACHE_TTL=${CACHE_TTL}
      - CACHE_KEY_PREFIX=${CACHE_KEY_PREFIX}
      - SERVER_PORT=${SERVER_PORT}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - nutri_thata_network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  nutri_thata_network:
    driver: bridge 